# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/NanoTransformer',
                'doc_host': 'https://tripathysagar.github.io',
                'git_url': 'https://github.com/tripathysagar/NanoTransformer',
                'lib_path': 'NanoTransformer'},
  'syms': { 'NanoTransformer.GPTText2Text': { 'NanoTransformer.GPTText2Text.AttentionHead': ( 'gpttext2text.html#attentionhead',
                                                                                              'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.AttentionHead.__init__': ( 'gpttext2text.html#attentionhead.__init__',
                                                                                                       'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.AttentionHead.forward': ( 'gpttext2text.html#attentionhead.forward',
                                                                                                      'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.Embedding': ( 'gpttext2text.html#embedding',
                                                                                          'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.Embedding.__init__': ( 'gpttext2text.html#embedding.__init__',
                                                                                                   'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.Embedding.forward': ( 'gpttext2text.html#embedding.forward',
                                                                                                  'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.FFN': ( 'gpttext2text.html#ffn',
                                                                                    'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.FFN.__init__': ( 'gpttext2text.html#ffn.__init__',
                                                                                             'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.FFN.forward': ( 'gpttext2text.html#ffn.forward',
                                                                                            'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.GPTConfig': ( 'gpttext2text.html#gptconfig',
                                                                                          'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.GPTModel': ( 'gpttext2text.html#gptmodel',
                                                                                         'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.GPTModel.__init__': ( 'gpttext2text.html#gptmodel.__init__',
                                                                                                  'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.GPTModel.forward': ( 'gpttext2text.html#gptmodel.forward',
                                                                                                 'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.MultiHeadAttention': ( 'gpttext2text.html#multiheadattention',
                                                                                                   'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.MultiHeadAttention.__init__': ( 'gpttext2text.html#multiheadattention.__init__',
                                                                                                            'NanoTransformer/GPTText2Text.py'),
                                              'NanoTransformer.GPTText2Text.MultiHeadAttention.forward': ( 'gpttext2text.html#multiheadattention.forward',
                                                                                                           'NanoTransformer/GPTText2Text.py')},
            'NanoTransformer.ImageEncoder': { 'NanoTransformer.ImageEncoder.ResBlock': ( 'imageencoder.html#resblock',
                                                                                         'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.ResBlock.__init__': ( 'imageencoder.html#resblock.__init__',
                                                                                                  'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.ResBlock.forward': ( 'imageencoder.html#resblock.forward',
                                                                                                 'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.VisionConfig': ( 'imageencoder.html#visionconfig',
                                                                                             'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.VisionEncoder': ( 'imageencoder.html#visionencoder',
                                                                                              'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.VisionEncoder.__init__': ( 'imageencoder.html#visionencoder.__init__',
                                                                                                       'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.VisionEncoder.forward': ( 'imageencoder.html#visionencoder.forward',
                                                                                                      'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.log': ( 'imageencoder.html#log',
                                                                                    'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.save_model': ( 'imageencoder.html#save_model',
                                                                                           'NanoTransformer/ImageEncoder.py'),
                                              'NanoTransformer.ImageEncoder.vision_encoder_train': ( 'imageencoder.html#vision_encoder_train',
                                                                                                     'NanoTransformer/ImageEncoder.py')},
            'NanoTransformer.Llam2': { 'NanoTransformer.Llam2.Embedding': ('llama2.html#embedding', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Embedding.__init__': ( 'llama2.html#embedding.__init__',
                                                                                     'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Embedding.forward': ( 'llama2.html#embedding.forward',
                                                                                    'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaConfig': ('llama2.html#llamaconfig', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaText': ('llama2.html#llamatext', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaText.__init__': ( 'llama2.html#llamatext.__init__',
                                                                                     'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaText._init_weights': ( 'llama2.html#llamatext._init_weights',
                                                                                          'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaText.decay_params': ( 'llama2.html#llamatext.decay_params',
                                                                                         'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.LlamaText.forward': ( 'llama2.html#llamatext.forward',
                                                                                    'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Optim': ('llama2.html#optim', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Optim.__init__': ('llama2.html#optim.__init__', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Optim.config_lr': ('llama2.html#optim.config_lr', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Optim.step': ('llama2.html#optim.step', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.Optim.zero': ('llama2.html#optim.zero', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.RoPE': ('llama2.html#rope', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.RoPE.__init__': ('llama2.html#rope.__init__', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.RoPE.forward': ('llama2.html#rope.forward', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.get_cosine_lr': ('llama2.html#get_cosine_lr', 'NanoTransformer/Llam2.py'),
                                       'NanoTransformer.Llam2.train': ('llama2.html#train', 'NanoTransformer/Llam2.py')},
            'NanoTransformer.MultiModal': { 'NanoTransformer.MultiModal.Embedding': ( 'multimodal.html#embedding',
                                                                                      'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.Embedding.__init__': ( 'multimodal.html#embedding.__init__',
                                                                                               'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.Embedding.forward': ( 'multimodal.html#embedding.forward',
                                                                                              'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.MultiModal': ( 'multimodal.html#multimodal',
                                                                                       'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.MultiModal.__init__': ( 'multimodal.html#multimodal.__init__',
                                                                                                'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.MultiModal.forward': ( 'multimodal.html#multimodal.forward',
                                                                                               'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.MultiModalConfig': ( 'multimodal.html#multimodalconfig',
                                                                                             'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter': ( 'multimodal.html#trainbatchiter',
                                                                                           'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter.__init__': ( 'multimodal.html#trainbatchiter.__init__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter.__iter__': ( 'multimodal.html#trainbatchiter.__iter__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter.__len__': ( 'multimodal.html#trainbatchiter.__len__',
                                                                                                   'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter.__next__': ( 'multimodal.html#trainbatchiter.__next__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.TrainBatchIter.reset': ( 'multimodal.html#trainbatchiter.reset',
                                                                                                 'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.ValidBatchIter': ( 'multimodal.html#validbatchiter',
                                                                                           'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.ValidBatchIter.__init__': ( 'multimodal.html#validbatchiter.__init__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.ValidBatchIter.__iter__': ( 'multimodal.html#validbatchiter.__iter__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.ValidBatchIter.__next__': ( 'multimodal.html#validbatchiter.__next__',
                                                                                                    'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.ValidBatchIter.reset': ( 'multimodal.html#validbatchiter.reset',
                                                                                                 'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.cal_loss': ( 'multimodal.html#cal_loss',
                                                                                     'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.calculate_text_loss': ( 'multimodal.html#calculate_text_loss',
                                                                                                'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.calculate_vision_loss': ( 'multimodal.html#calculate_vision_loss',
                                                                                                  'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.generate_caption': ( 'multimodal.html#generate_caption',
                                                                                             'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.generate_text': ( 'multimodal.html#generate_text',
                                                                                          'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.pred': ('multimodal.html#pred', 'NanoTransformer/MultiModal.py'),
                                            'NanoTransformer.MultiModal.total_loss': ( 'multimodal.html#total_loss',
                                                                                       'NanoTransformer/MultiModal.py')},
            'NanoTransformer.data': { 'NanoTransformer.data.GPTDataset': ('data.html#gptdataset', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.GPTDataset.__getitem__': ( 'data.html#gptdataset.__getitem__',
                                                                                       'NanoTransformer/data.py'),
                                      'NanoTransformer.data.GPTDataset.__init__': ( 'data.html#gptdataset.__init__',
                                                                                    'NanoTransformer/data.py'),
                                      'NanoTransformer.data.GPTDataset.__len__': ( 'data.html#gptdataset.__len__',
                                                                                   'NanoTransformer/data.py'),
                                      'NanoTransformer.data.MNISTDataset': ('data.html#mnistdataset', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.MNISTDataset.__getitem__': ( 'data.html#mnistdataset.__getitem__',
                                                                                         'NanoTransformer/data.py'),
                                      'NanoTransformer.data.MNISTDataset.__init__': ( 'data.html#mnistdataset.__init__',
                                                                                      'NanoTransformer/data.py'),
                                      'NanoTransformer.data.MNISTDataset.__len__': ( 'data.html#mnistdataset.__len__',
                                                                                     'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer': ('data.html#tokenizer', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.__init__': ( 'data.html#tokenizer.__init__',
                                                                                   'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.c2i': ('data.html#tokenizer.c2i', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.decode': ('data.html#tokenizer.decode', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.encode': ('data.html#tokenizer.encode', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.i2c': ('data.html#tokenizer.i2c', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.Tokenizer.setup_vocab': ( 'data.html#tokenizer.setup_vocab',
                                                                                      'NanoTransformer/data.py'),
                                      'NanoTransformer.data.collate_fn_multimodal': ( 'data.html#collate_fn_multimodal',
                                                                                      'NanoTransformer/data.py'),
                                      'NanoTransformer.data.get_mnist_caption_dl': ( 'data.html#get_mnist_caption_dl',
                                                                                     'NanoTransformer/data.py'),
                                      'NanoTransformer.data.get_text_dl': ('data.html#get_text_dl', 'NanoTransformer/data.py'),
                                      'NanoTransformer.data.get_vision_classifier_dl': ( 'data.html#get_vision_classifier_dl',
                                                                                         'NanoTransformer/data.py'),
                                      'NanoTransformer.data.show_images': ('data.html#show_images', 'NanoTransformer/data.py')}}}
